package ui;

import javax.swing.*;
import java.awt.*;

public class KundenUI extends JFrame {
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new KundenUI().setVisible(true));
    }

    public KundenUI() {
        setTitle("Mietwagen Auswahl");
        setSize(1200, 500);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        JPanel mainPanel = new JPanel();
        mainPanel.setLayout(new BoxLayout(mainPanel, BoxLayout.X_AXIS));
        mainPanel.setBackground(Color.DARK_GRAY);
        mainPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

        mainPanel.add(createCarCard("VW GOLF", "Kompaktklasse Limousine Manuell", "Manuell", 5, "Elektro", 1000, "92,74 ‚Ç¨", "370,95 ‚Ç¨", "pfad/zum/bild.png"));
        mainPanel.add(Box.createRigidArea(new Dimension(20, 0)));
        mainPanel.add(createCarCard("VW T-CROSS", "Kompaktklasse Limousine Automatik", "Automatik", 5, "Diesel", 800, "93,49 ‚Ç¨", "373,95 ‚Ç¨", "pfad/zum/bild.png"));
        mainPanel.add(Box.createRigidArea(new Dimension(20, 0)));
        mainPanel.add(createCarCard("VW T-ROC", "Kompaktklasse SUV Manuell", "Manuell", 5, "Benzin", 600, "93,74 ‚Ç¨", "374,97 ‚Ç¨", "pfad/zum/bild.png"));

        add(mainPanel);
    }

    private JPanel createCarCard(String title, String subtitle, String gearType, int seats, String fuel, int reach, String pricePerDay, String totalPrice, String imagePath) {
        int width = 350, height = 400;
        JPanel card = new RoundedPanel(20);
        card.setPreferredSize(new Dimension(width, height));
        card.setMaximumSize(new Dimension(width, height));
        card.setMinimumSize(new Dimension(width, height));
        card.setBackground(Color.WHITE);
        card.setLayout(new BoxLayout(card, BoxLayout.Y_AXIS));
        card.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

        // Labels
        JLabel titleLabel = new JLabel(title);
        titleLabel.setAlignmentX(Component.LEFT_ALIGNMENT);
        titleLabel.setFont(new Font("Arial", Font.BOLD, 16));
        card.add(titleLabel);

        JLabel subtitleLabel = new JLabel(subtitle);
        subtitleLabel.setAlignmentX(Component.LEFT_ALIGNMENT);
        card.add(subtitleLabel);

        JPanel iconsPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        iconsPanel.setBackground(Color.WHITE);
        iconsPanel.setAlignmentX(Component.LEFT_ALIGNMENT);
        iconsPanel.add(new JLabel("üë§ " + seats));
        iconsPanel.add(new JLabel("‚õΩ " + fuel));
        iconsPanel.add(new JLabel("‚âà " + reach + "km"));
        iconsPanel.add(new JLabel("‚öôÔ∏è " + gearType));
        card.add(iconsPanel);

        try {
            ImageIcon carImage = new ImageIcon(imagePath);
            Image scaledImage = carImage.getImage().getScaledInstance(300, 120, Image.SCALE_SMOOTH);
            card.add(new JLabel(new ImageIcon(scaledImage)));
        } catch (Exception e) {
            card.add(new JLabel("(Bild nicht gefunden)"));
        }

        JLabel priceLabel = new JLabel(pricePerDay + " / Tag");
        priceLabel.setFont(new Font("Arial", Font.BOLD, 16));
        card.add(priceLabel);

        JLabel totalLabel = new JLabel(totalPrice + " Gesamtpreis");
        card.add(totalLabel);
        
        //Colors
        Color defaultColor = Color.WHITE;
        Color hoverBorder = new Color(100, 150, 255);
        Color clickColor = new Color(230, 230, 230);

        card.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                card.setBorder(BorderFactory.createLineBorder(hoverBorder, 10));
                card.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            }

            @Override
            public void mouseExited(java.awt.event.MouseEvent evt) {
            	card.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
                card.setCursor(Cursor.getDefaultCursor());
            }

            @Override
            public void mousePressed(java.awt.event.MouseEvent evt) {
                card.setBackground(clickColor);
                iconsPanel.setBackground(clickColor);
            }

            @Override
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                card.setBackground(defaultColor);
                iconsPanel.setBackground(defaultColor);
                JOptionPane.showMessageDialog(card, "Du hast " + title + " gew√§hlt!");
            }
        });

        return card;
    }

    class RoundedPanel extends JPanel {
        private final int cornerRadius;

        public RoundedPanel(int radius) {
            this.cornerRadius = radius;
            setOpaque(false);
        }

        @Override
        protected void paintComponent(Graphics g) {
            Graphics2D g2 = (Graphics2D) g.create();
            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            g2.setColor(getBackground());
            g2.fillRoundRect(0, 0, getWidth(), getHeight(), cornerRadius, cornerRadius);
            g2.dispose();
            super.paintComponent(g);
        }
    }
}
